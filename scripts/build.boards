#!/bin/sh

## hyphop ##

#= build krescue images for all boards

## USAGE: ./build

. $(dirname "$0")/build.lib

echo "[i] MAKE BOARDS IMAGES ">&2

cd "$KTMP" || FAIL oops 

SQUASHFS_TIME=$(squashfs_date "$ROOTFS_IMAGE")
SQUASHFS_DATE=$(TZ= date -d @$SQUASHFS_TIME)

SQUASHFS_DATE2=
for d in $SQUASHFS_DATE; do
    SQUASHFS_DATE2="${SQUASHFS_DATE2}_$d"
done
SQUASHFS_DATE2=${SQUASHFS_DATE2#_}

echo $SQUASHFS_DATE2

gzip=$(which pigz)

[ "$gzip" ] || gzip=$(which gzip)
[ "$gzip" ] || FAIL gzip not found

SZ_TPL="size.000000000"

pack_gz(){
    # compress by meta name - stored in gzip header
    ln -sf "$1" "$3"
    $gzip -9c "$3" > "$2"
    # get compressed size and put in header as meta data
    SZ_=$(printf "%-${#SZ_TPL}s" size.$(stat -c%s "$2"))
    sed -i "s/$SZ_TPL/$SZ_/" "$2"
    #
    rm "$3"
}
				  

[ -s "$IMAGE" ] || {
    [ -s "$IMAGE.gz" ] || FAIL $IMAGE or .gz not found
    $gzip -dc "$IMAGE.gz" > "$IMAGE" || FAIL booom
}

gz_meta="time.$SQUASHFS_TIME.$SZ_TPL.SIZE.$(stat -c%s "$IMAGE").date.$SQUASHFS_DATE2.$IMAGE_UNI"

for B in $BOARDS; do
    U=$UBOOTS/$B.u-boot.sd.bin
    [ -s "$U" ] && {
	echo "$B "
	O="$B.$IMAGE_UNI"
	cp $IMAGE $O
	## UBOOT COPY
	dd if=$U bs=$((512*64)) conv=fsync,notrunc of=$O 2>/dev/null
	## WRITE PTABLE
	dd if=$IMAGE count=1    conv=fsync,notrunc of=$O 2>/dev/null
	## FIX UBOOT
	dd if=$U count=1 bs=444 conv=fsync,notrunc of=$O 2>/dev/null
	##
	#pigz -1c "$O" > "$O.gz"
	pack_gz "$O" "$O.gz" "board.$B.$gz_meta"
#	rm "$O"
    }
done

pack_gz "$IMAGE" "$IMAGE.gz" "board.Khadas.$gz_meta"
#
cd - 1>/dev/null
